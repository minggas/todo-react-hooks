{"version":3,"sources":["styles/TodoStyle.js","styles/ContentStyle.js","styles/TodoBtnStyle.js","styles/CheckboxStyle.js","components/Todo.js","components/container/TodoList.js"],"names":["Todo","styled","div","_templateObject","ContentTodo","input","ContentStyle_templateObject","props","readOnly","isChecked","TodoBtnStyle","button","TodoBtnStyle_templateObject","children","CheckboxStyle","CheckboxStyle_templateObject","_ref","id","dispatch","useContext","Context","_useState","useState","_useState2","Object","slicedToArray","editable","setEditable","_useState3","_useState4","current","setCurrent","useEffect","react_default","a","createElement","TodoStyle","styles_CheckboxStyle","type","checked","onChange","payload","ContentStyle","value","onKeyPress","e","key","target","styles_TodoBtnStyle","onClick","text","TodoList","todos","Fragment","map","element","idx","Todo_Todo","assign"],"mappings":"2cAEA,IAYeA,EAZFC,IAAOC,IAAVC,iOCAV,IAUeC,EAVKH,IAAOI,MAAVC,IAKK,SAAAC,GAAK,OAAKA,EAAMC,SAAW,cAAgB,SACpD,SAAAD,GAAK,OAAKA,EAAMC,SAAW,OAAS,GACvB,SAAAD,GAAK,OAAKA,EAAME,UAAY,eAAiB,sLCPvE,IAmBeC,EAnBMT,IAAOU,OAAVC,IAKI,SAAAL,GAClB,OAAQA,EAAMM,UACZ,IAAK,SACH,MAAO,sBACT,IAAK,OACH,MAAO,wBACT,IAAK,OACH,MAAO,sBACT,QACE,MAAO,2JCdf,IAMeC,EANOb,IAAOI,MAAVU,YCKJ,SAASf,EAATgB,GAA2C,IAA3BC,EAA2BD,EAA3BC,GAAIJ,EAAuBG,EAAvBH,SAAUJ,EAAaO,EAAbP,UACrCS,EAAWC,qBAAWC,KAD4BC,EAExBC,oBAAS,GAFeC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEjDK,EAFiDH,EAAA,GAEvCI,EAFuCJ,EAAA,GAAAK,EAG1BN,mBAAST,GAHiBgB,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGjDE,EAHiDD,EAAA,GAGxCE,EAHwCF,EAAA,GASxD,OAJAG,oBAAU,WACRD,EAAWlB,IACV,CAACA,IAGFoB,EAAAC,EAAAC,cAACC,EAAD,CAAWnB,GAAIA,GACbgB,EAAAC,EAAAC,cAACE,EAAD,CACEC,KAAK,WACLC,QAAS9B,EACT+B,SAAU,kBAAMtB,EAAS,CAAEoB,KAAM,eAAgBG,QAASxB,OAE5DgB,EAAAC,EAAAC,cAACO,EAAD,CACEC,MAAOb,EACPtB,UAAWkB,EACXjB,UAAWA,EACXmC,WAAY,SAAAC,GACI,UAAVA,EAAEC,KACJnB,GAAaD,IAGjBc,SAAU,SAAAK,GAAC,OAAId,EAAWc,EAAEE,OAAOJ,UAErCV,EAAAC,EAAAC,cAACa,EAAD,CACEC,QAAS,WACHvB,GACFR,EAAS,CACPoB,KAAM,aACNG,QAAS,CAAExB,GAAIA,EAAIiC,KAAMpB,KAG7BH,GAAaD,KAGdA,EAAW,OAAS,QAEvBO,EAAAC,EAAAC,cAACa,EAAD,CACEC,QAAS,kBAAM/B,EAAS,CAAEoB,KAAM,aAAcG,QAASxB,MADzD,WC/BSkC,UAbE,SAAAnC,GAAe,IAAZoC,EAAYpC,EAAZoC,MAClB,OACEnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmB,SAAA,KACGD,GACCA,EAAME,IAAI,SAACC,EAASC,GAAV,OACRvB,EAAAC,EAAAC,cAACsB,EAADjC,OAAAkC,OAAA,CAAMZ,IAAKU,EAAKvC,GAAIuC,GAASD,GAC1BA,EAAQL","file":"static/js/5.0a077039.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Todo = styled.div`\n  width: 85%;\n  padding: 0.5rem 1.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: var(--main-bg-color);\n  border-radius: 5px;\n  box-shadow: 2px 2px 5px rgb(30, 30, 30);\n  margin: 10px auto;\n`;\n\nexport default Todo;\n","import styled from \"styled-components\";\n\nconst ContentTodo = styled.input`\n  width: 100%;\n  height: 2rem;\n  padding: 0.5rem;\n  border-radius: 5px;\n  background-color: ${props => (props.readOnly ? \"transparent\" : \"white\")};\n  outline: ${props => (props.readOnly ? \"none\" : 1)};\n  text-decoration-line: ${props => (props.isChecked ? \"line-through\" : \"none\")};\n`;\n\nexport default ContentTodo;\n","import styled from \"styled-components\";\n\nconst TodoBtnStyle = styled.button`\n  margin: 5px;\n  padding: 0.5rem;\n  border-radius: 5px;\n  border: none;\n  background-color: ${props => {\n    switch (props.children) {\n      case \"Delete\":\n        return \"rgba(200,50,60,0.8)\";\n      case \"Edit\":\n        return \"rgba(100,100,200,0.8)\";\n      case \"Save\":\n        return \"rgba(50,200,80,0.8)\";\n      default:\n        return \"rgba(100,100,100,0.8)\";\n    }\n  }};\n`;\n\nexport default TodoBtnStyle;\n","import styled from \"styled-components\";\n\nconst CheckboxStyle = styled.input`\n  height: 2.5rem;\n  width: 2.5rem;\n  padding: 0.2rem;\n`;\n\nexport default CheckboxStyle;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport TodoStyle from \"../styles/TodoStyle\";\nimport ContentStyle from \"../styles/ContentStyle\";\nimport TodoBtnStyle from \"../styles/TodoBtnStyle\";\nimport CheckboxStyle from \"../styles/CheckboxStyle\";\nimport { Context } from \"./container/App\";\n\nexport default function Todo({ id, children, isChecked }) {\n  const dispatch = useContext(Context);\n  const [editable, setEditable] = useState(false);\n  const [current, setCurrent] = useState(children);\n\n  useEffect(() => {\n    setCurrent(children);\n  }, [children]);\n\n  return (\n    <TodoStyle id={id}>\n      <CheckboxStyle\n        type=\"checkbox\"\n        checked={isChecked}\n        onChange={() => dispatch({ type: \"completeTodo\", payload: id })}\n      />\n      <ContentStyle\n        value={current}\n        readOnly={!editable}\n        isChecked={isChecked}\n        onKeyPress={e => {\n          if (e.key === \"Enter\") {\n            setEditable(!editable);\n          }\n        }}\n        onChange={e => setCurrent(e.target.value)}\n      />\n      <TodoBtnStyle\n        onClick={() => {\n          if (editable) {\n            dispatch({\n              type: \"updateTodo\",\n              payload: { id: id, text: current }\n            });\n          }\n          setEditable(!editable);\n        }}\n      >\n        {editable ? \"Save\" : \"Edit\"}\n      </TodoBtnStyle>\n      <TodoBtnStyle\n        onClick={() => dispatch({ type: \"deleteTodo\", payload: id })}\n      >\n        Delete\n      </TodoBtnStyle>\n    </TodoStyle>\n  );\n}\n","import React from \"react\";\nimport Todo from \"../Todo\";\n\nconst TodoList = ({ todos }) => {\n  return (\n    <>\n      {todos &&\n        todos.map((element, idx) => (\n          <Todo key={idx} id={idx} {...element}>\n            {element.text}\n          </Todo>\n        ))}\n    </>\n  );\n};\n\nexport default TodoList;\n"],"sourceRoot":""}