{"version":3,"sources":["styles/TodoStyle.js","styles/ContentStyle.js","styles/TodoBtnStyle.js","styles/CheckboxStyle.js","components/Todo.js","styles/TodoListStyle.js","components/container/TodoList.js"],"names":["TodoStyle","styled","div","_templateObject","props","editable","ContentEditStyle","textarea","ContentStyle_templateObject","readOnly","ContentStyle","span","_templateObject2","isChecked","TodoBtnStyle","button","TodoBtnStyle_templateObject","children","CheckboxStyle","input","CheckboxStyle_templateObject","Todo","_ref","id","dispatch","useContext","Context","_useState","useState","_useState2","Object","slicedToArray","setEditable","_useState3","_useState4","current","setCurrent","useEffect","react_default","a","createElement","styles_TodoStyle","onClick","Fragment","styles_CheckboxStyle","type","checked","onChange","payload","value","e","target","styles_TodoBtnStyle","text","TodoListStyle","TodoListStyle_templateObject","TodoList","todos","styles_TodoListStyle","map","element","idx","assign","key"],"mappings":"scAEA,IAaeA,EAbGC,IAAOC,IAAVC,IAIY,SAAAC,GAAK,OAC5BA,EAAMC,SAAW,oBAAsB,iWCLpC,IAAMC,EAAmBL,IAAOM,SAAVC,IAIP,SAAAJ,GAAK,OAAKA,EAAMK,SAAW,cAAgB,UAGpDC,EAAeT,IAAOU,KAAVC,IAKC,SAAAR,GAAK,OAAKA,EAAMS,UAAY,eAAiB,uMCZvE,IAoBeC,EApBMb,IAAOc,OAAVC,IAMI,SAAAZ,GAClB,OAAQA,EAAMa,UACZ,IAAK,SACH,MAAO,sBACT,IAAK,OACH,MAAO,wBACT,IAAK,OACH,MAAO,sBACT,QACE,MAAO,2JCff,IAMeC,EANOjB,IAAOkB,MAAVC,YCKJ,SAASC,EAATC,GAA2C,IAA3BC,EAA2BD,EAA3BC,GAAIN,EAAuBK,EAAvBL,SAAUJ,EAAaS,EAAbT,UACrCW,EAAWC,qBAAWC,KAD4BC,EAExBC,oBAAS,GAFeC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEjDtB,EAFiDwB,EAAA,GAEvCG,EAFuCH,EAAA,GAAAI,EAG1BL,mBAASX,GAHiBiB,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAGjDE,EAHiDD,EAAA,GAGxCE,EAHwCF,EAAA,GASxD,OAJAG,oBAAU,WACRD,EAAWnB,IACV,CAACA,IAGFqB,EAAAC,EAAAC,cAACC,EAAD,CAAWlB,GAAIA,EAAIlB,SAAUA,EAAUqC,QAAS,kBAAMV,GAAY,KAC/D3B,EACCiC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAI,SAAA,KACEL,EAAAC,EAAAC,cAACI,EAAD,CACEC,KAAK,WACLC,QAASjC,EACTkC,SAAU,kBAAMvB,EAAS,CAAEqB,KAAM,eAAgBG,QAASzB,OAE5De,EAAAC,EAAAC,cAAClC,EAAD,CACE2C,MAAOd,EACPY,SAAU,SAAAG,GAAC,OAAId,EAAWc,EAAEC,OAAOF,UAErCX,EAAAC,EAAAC,cAACY,EAAD,CACEV,QAAS,WACHrC,GACFmB,EAAS,CACPqB,KAAM,aACNG,QAAS,CAAEzB,GAAIA,EAAI8B,KAAMlB,KAG7BH,GAAY,KAGb3B,EAAW,OAAS,QAEvBiC,EAAAC,EAAAC,cAACY,EAAD,CACEV,QAAS,kBAAMlB,EAAS,CAAEqB,KAAM,aAAcG,QAASzB,MADzD,WAOFe,EAAAC,EAAAC,cAAC9B,EAAD,CAAcG,UAAWA,GAAYsB,sJC/C7C,IAMemB,EANOrD,IAAOC,IAAVqD,KCeJC,UAbE,SAAAlC,GAAe,IAAZmC,EAAYnC,EAAZmC,MAClB,OACEnB,EAAAC,EAAAC,cAACkB,EAAD,KACGD,GACCA,EAAME,IAAI,SAACC,EAASC,GAAV,OACRvB,EAAAC,EAAAC,cAACnB,EAADS,OAAAgC,OAAA,CAAMC,IAAKF,EAAKtC,GAAIsC,GAASD,GAC1BA,EAAQP","file":"static/js/5.0eda3545.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst TodoStyle = styled.div`\n  width: 100%;\n  padding: 0.5rem 1rem;\n  display: grid;\n  grid-template-columns: ${props =>\n    props.editable ? \"0.5fr 5fr 1fr 1fr\" : \"1fr\"};\n  background-color: var(--main-bg-color);\n  border-radius: 5px;\n  box-shadow: 0px 0px 1px rgb(30, 30, 30);\n  margin: 10px auto;\n  align-items: center;\n`;\n\nexport default TodoStyle;\n","import styled from \"styled-components\";\n\nexport const ContentEditStyle = styled.textarea`\n  width: 90%;\n  padding: 0.5rem;\n  border-radius: 5px;\n  background-color: ${props => (props.readOnly ? \"transparent\" : \"white\")};\n`;\n\nexport const ContentStyle = styled.span`\n  width: 100%;\n  padding: 0.5rem;\n  overflow-wrap: break-word;\n  border-radius: 5px;\n  text-decoration-line: ${props => (props.isChecked ? \"line-through\" : \"none\")};\n`;\n","import styled from \"styled-components\";\n\nconst TodoBtnStyle = styled.button`\n  margin: 5px;\n  padding: 0.5rem;\n  height: 2rem;\n  border-radius: 5px;\n  border: none;\n  background-color: ${props => {\n    switch (props.children) {\n      case \"Delete\":\n        return \"rgba(200,50,60,0.8)\";\n      case \"Edit\":\n        return \"rgba(100,100,200,0.8)\";\n      case \"Save\":\n        return \"rgba(50,200,80,0.8)\";\n      default:\n        return \"rgba(100,100,100,0.8)\";\n    }\n  }};\n`;\n\nexport default TodoBtnStyle;\n","import styled from \"styled-components\";\n\nconst CheckboxStyle = styled.input`\n  height: 1.5rem;\n  width: 1.5rem;\n  padding: 0.2rem;\n`;\n\nexport default CheckboxStyle;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport TodoStyle from \"../styles/TodoStyle\";\nimport { ContentStyle, ContentEditStyle } from \"../styles/ContentStyle\";\nimport TodoBtnStyle from \"../styles/TodoBtnStyle\";\nimport CheckboxStyle from \"../styles/CheckboxStyle\";\nimport { Context } from \"./container/App\";\n\nexport default function Todo({ id, children, isChecked }) {\n  const dispatch = useContext(Context);\n  const [editable, setEditable] = useState(false);\n  const [current, setCurrent] = useState(children);\n\n  useEffect(() => {\n    setCurrent(children);\n  }, [children]);\n\n  return (\n    <TodoStyle id={id} editable={editable} onClick={() => setEditable(true)}>\n      {editable ? (\n        <>\n          <CheckboxStyle\n            type=\"checkbox\"\n            checked={isChecked}\n            onChange={() => dispatch({ type: \"completeTodo\", payload: id })}\n          />\n          <ContentEditStyle\n            value={current}\n            onChange={e => setCurrent(e.target.value)}\n          />\n          <TodoBtnStyle\n            onClick={() => {\n              if (editable) {\n                dispatch({\n                  type: \"updateTodo\",\n                  payload: { id: id, text: current }\n                });\n              }\n              setEditable(false);\n            }}\n          >\n            {editable ? \"Save\" : \"Edit\"}\n          </TodoBtnStyle>\n          <TodoBtnStyle\n            onClick={() => dispatch({ type: \"deleteTodo\", payload: id })}\n          >\n            Delete\n          </TodoBtnStyle>\n        </>\n      ) : (\n        <ContentStyle isChecked={isChecked}>{current}</ContentStyle>\n      )}\n    </TodoStyle>\n  );\n}\n","import styled from \"styled-components\";\n\nconst TodoListStyle = styled.div`\n  width: 100%;\n  padding: 10px;\n  background-color: rgb(230, 230, 230);\n`;\n\nexport default TodoListStyle;\n","import React from \"react\";\nimport Todo from \"../Todo\";\nimport TodoListStyle from \"../../styles/TodoListStyle\";\n\nconst TodoList = ({ todos }) => {\n  return (\n    <TodoListStyle>\n      {todos &&\n        todos.map((element, idx) => (\n          <Todo key={idx} id={idx} {...element}>\n            {element.text}\n          </Todo>\n        ))}\n    </TodoListStyle>\n  );\n};\n\nexport default TodoList;\n"],"sourceRoot":""}